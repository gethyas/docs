---
import { integrationPages } from '~/content';
import {
	type IntegrationCategory,
	type IntegrationEntry,
} from '~/content/config';
import { isLogoKey } from '~/data/logos';
import { useTranslations } from '~/i18n/util';
import { getLanguageFromURL } from '~/util';
import CardsNav from './NavGrid/CardsNav.astro';

interface Props {
	category?: IntegrationCategory;
}

const lang = getLanguageFromURL(Astro.url.pathname);

function categoryLinksFromPages(pages: IntegrationEntry[], category: IntegrationCategory) {
	return pages
		.filter((page) => page.data.category === category)
		.map((page) => {
			const { service } = page.data;
			const pageUrl = '/' + page.slug.replace('en/', `${lang}/`) + '/';
			return {
				title: service,
				href: pageUrl,
				logo: isLogoKey(page.slug.split('/').pop()),
			};
		});
}

const t = useTranslations(Astro);

const allCategories = {
	renderer: {
		title: t('integrations.renderers'),
		links: categoryLinksFromPages(integrationPages, 'renderer'),
	},
	theme: { title: t('integrations.themes'), links: categoryLinksFromPages(integrationPages, 'theme') },
	other: { title: t('integrations.others'), links: categoryLinksFromPages(integrationPages, 'other') },
};
const category = allCategories[Astro.props.category!];

const categories = category ? [category] : allCategories;
---

{
	Object.values(categories).map((category) => (
		<>
			<h3>{category.title}</h3>
			<CardsNav minimal links={category.links} class="integrations-nav" />
		</>
	))
}

<style>
	.integrations-nav > :global(*) {
		margin-top: 2rem;
	}
</style>
